// DO NOT EDIT THIS FILE, IT IS GENERATED BY DALC
package  {{ .Package }}

import (
    "context"
    "database/sql"
    "github.com/pharosnet/dalc/v2"
    {{ range $key, $value := .Imports }}
        "{{ $key }}"
    {{ end }}
)

// ************* {{ .RawName }} *************
const {{ .LowName }}SQL = "{{ .QuerySQL }}"

type {{ .Name }}Request struct { {{ range $key, $field := .RequestFields}}
    {{ $field.Name }} {{ $field.Type }}{{ end }}
}

{{ if eq .IsTable true }}
    type {{ .Name }}ResultIterator func(ctx context.Context, result *{{ .Table.GoName }}Row) (err error)
{{ else }}
    type {{ .Name }}Result struct { {{ range $key, $field := .ResultFields}}
        {{ $field.Name }} {{ $field.Type }} {{ $field.Tags }}{{ end }}
    }

    type {{ .Name }}ResultIterator func(ctx context.Context, result *{{ .Name }}Result) (err error)
{{ end }}


func {{ .Name }}(ctx dalc.PreparedContext, request *{{ .Name }}Request, iterator {{ .Name }}ResultIterator) (err error) {

    querySQL := {{ .LowName }}SQL
    args := dalc.NewArgs() {{ range $key, $field := .RequestFields}}
    {{ if eq $field.Replaced true }}
        querySQL = dalc.ReplaceSQL(querySQL, "{{$field.ReplaceKey}}", dalc.NewTupleArgs(request.{{$field.Name}}))
    {{ else }}args.Arg(request.{{ $field.Name }}){{ end }}{{ end }}

    err = dalc.Query(ctx, querySQL, args, func(ctx context.Context, rows *sql.Rows, rowErr error) (err error) {

        if rowErr != nil {
            err = rowErr
            return
        }

        {{ if eq .IsTable true }}
            result := &{{ .Table.GoName }}Row{}
            scanErr := result.scanSQLRow(rows)
        {{ else }}
            result := &{{ .Name }}Result{}
            scanErr := rows.Scan( {{ range $key, $field := .ResultFields}}
                &result.{{ $field.Name }},{{ end }}
            )
        {{ end }}

        if scanErr != nil {
            err = scanErr
            return
        }

        err = iterator(ctx, result)

        return
    })

    return
}