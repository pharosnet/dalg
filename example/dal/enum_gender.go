// This file is generated by pharosnet/dalg, please don't change it by hand.
package dal

import (
	"database/sql/driver"
	"errors"
	"fmt"
)

var (
	GenderMALE   = Gender{Data: "MALE", Origin: true, Valid: true}
	GenderFEMALE = Gender{Data: "FEMALE", Origin: false, Valid: true}
)

type Gender struct {
	Data   string
	Origin bool
	Valid  bool
}

func (e Gender) Format(s fmt.State, verb rune) {
	switch verb {
	case 'v':
		fmt.Fprintf(
			s,
			"{%v %v}",
			e.Data, e.Origin,
		)
	}
}

func (e *Gender) Scan(value interface{}) error {
	if value == nil {
		e.Valid = false
		return nil
	}
	val, ok := value.(bool)
	if !ok {
		return errors.New("Gender: scan failed, value type is invalid")
	}
	e.Origin = val
	switch val {
	case true:
		e.Data = "MALE"
	case false:
		e.Data = "FEMALE"
	default:
		return errors.New("Gender: scan failed, value is out of range")
	}
	e.Valid = true
	return nil
}

func (e Gender) Value() (driver.Value, error) {
	if !e.Valid {
		return nil, nil
	}
	switch e.Data {
	case "MALE":
		e.Origin = true
	case "FEMALE":
		e.Origin = false
	default:
		return nil, errors.New("Gender: to sql driver value failed, value is out of range")
	}
	return e.Origin, nil
}
